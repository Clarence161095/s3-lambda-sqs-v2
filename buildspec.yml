version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18.x
    commands:
      - pip3 install aws-sam-cli
  pre_build:
    commands:
      - npm install
  build:
    commands:
      - npm run build
      - |
        set -e
        {
          echo "Deploying SAM application..."
          sam deploy \
            --no-confirm-changeset --no-fail-on-empty-changeset \
            --stack-name lab-practice-101-s3-lambda-sqs-v2 \
            --s3-bucket ${ARTIFACT_BUCKET} --region ${AWS_REGION} \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM
        } || {
          echo "Deployment failed!"
          aws cloudformation delete-stack --stack-name lab-practice-101-s3-lambda-sqs-v2
          exit 1
        }
  post_build:
    commands:
      - |
        set -e
        {
          echo "Waiting for stack to be created/updated..."
          aws cloudformation wait stack-create-complete --stack-name lab-practice-101-s3-lambda-sqs-v2

          echo "Getting Lambda ARNs from stack outputs..."
          AC_LAMBDA_ARN=$(aws cloudformation describe-stacks --stack-name lab-practice-101-s3-lambda-sqs-v2 --query "Stacks[0].Outputs[?OutputKey=='ACLambdaFunction'].OutputValue" --output text)
          RC_LAMBDA_ARN=$(aws cloudformation describe-stacks --stack-name lab-practice-101-s3-lambda-sqs-v2 --query "Stacks[0].Outputs[?OutputKey=='RCLambdaFunction'].OutputValue" --output text)

          echo "AC Lambda ARN: ${AC_LAMBDA_ARN}"
          echo "RC Lambda ARN: ${RC_LAMBDA_ARN}"

          if [ -z "$AC_LAMBDA_ARN" ] || [ -z "$RC_LAMBDA_ARN" ]; then
            echo "Error: One or both Lambda ARNs are empty. Exiting..."
            exit 1
          fi

          echo "Configuring S3 bucket notifications..."
          aws s3api put-bucket-notification-configuration \
            --bucket ${AC_BUCKET} \
            --notification-configuration '{
              "LambdaFunctionConfigurations": [
                {
                  "LambdaFunctionArn": "'"${AC_LAMBDA_ARN}"'",
                  "Events": ["s3:ObjectCreated:*"]
                }
              ]
            }'

          aws s3api put-bucket-notification-configuration \
            --bucket ${RC_BUCKET} \
            --notification-configuration '{
              "LambdaFunctionConfigurations": [
                {
                  "LambdaFunctionArn": "'"${RC_LAMBDA_ARN}"'",
                  "Events": ["s3:ObjectCreated:*"]
                }
              ]
            }'

          echo "Deployment completed successfully!"
        } || {
          echo "Deployment failed!"
          aws cloudformation delete-stack --stack-name lab-practice-101-s3-lambda-sqs-v2
          exit 1
        }
